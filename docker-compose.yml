version: '3.8'
services:
  rabbit:
    image: rabbitmq:3-management-alpine
    container_name: rabbit
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/
      - rabbitmq_log:/var/log/rabbitmq/

  db:
    image: postgres:14.1-alpine
    container_name: db
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - db:/var/lib/postgresql/data

  poller:
    container_name: poller
    build:
      context: .
      dockerfile: deploy/poller.Dockerfile
    restart: always
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
    depends_on:
      - rabbit
    volumes:
      - type: bind
        source: ./logs/
        target: /app/logs/

  worker:
    build:
      context: .
      dockerfile: deploy/worker.Dockerfile
    restart: always
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
    deploy:
      mode: replicated
      replicas: 3
    depends_on:
      - rabbit
      - db
    volumes:
      - type: bind
        source: ./logs/
        target: /app/logs/

volumes:
  db:
    driver: local
  rabbitmq_data:
    driver: local
  rabbitmq_log:
    driver: local
